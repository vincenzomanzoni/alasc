options
{
STATIC = false; // default TRUE
LOOKAHEAD = 1; // default 1
IGNORE_CASE = true; // default false
}

PARSER_BEGIN(expr1)
package it.unibg.alasc.examples;
import java.io.*;
import java.util.*;

public class expr1 {
	
	private int subtotale;
	private HashMap<String, Integer> carrello = new HashMap<String, Integer>();
	
	private void aggiornaSubtotale(int qta, int prezzoUnitario) {
		this.subtotale += qta * prezzoUnitario;
	}
	
	public String toString() {
		return "Parziale = " + subtotale + ", " +
			carrello.toString();
	}
	
	private void aggiornaCarrello(String nomeProdotto, int qta) {
		if (carrello.containsKey(nomeProdotto)) {
			carrello.put(nomeProdotto, carrello.get(nomeProdotto) + qta); 
		} else {
			carrello.put(nomeProdotto, qta);
		}
	}
	
	public static void main(String args[]) throws FileNotFoundException {
		expr1 parser = new expr1(new FileReader("test-scontrino.txt"));
		try {
			parser.start();
			System.out.println(parser);
		} catch(ParseException pe) {
			System.out.println(pe.toString());
		} catch(SemanticException se) {
			System.out.println(se.toString());
		}
	}
}
PARSER_END(expr1)

SKIP : { " " | "\t" | "\n" | "\r" }

TOKEN :
{
	<PRODOTTO: (["a"-"z"])+>
	| <QTA: (["0"-"9"])+>
	| <PREZZO: "E"(["0"-"9"])+>
}

void start() throws SemanticException : {}
{ 
	lista() 
	{
	}
}

void lista() throws SemanticException : {}
{ 
	riga() lista()
	{} 
	| 
	{}
}

void riga() throws SemanticException : {Token q, p, prd;}
{ 
	prd=<PRODOTTO> q=<QTA> p=<PREZZO>
	{	
		// Verifica che il numero prodotti sia maggiore di 0
		if(Integer.parseInt(q.image) <= 0) {
			throw new SemanticException("Qta must be positive");
		}
		
		// Aggiorna subtotale
		aggiornaSubtotale(Integer.parseInt(q.image), 
			Integer.parseInt(p.image.substring(1)));
		
		// Aggiorna carrello
		aggiornaCarrello(prd.image, Integer.parseInt(q.image));
	} 
}